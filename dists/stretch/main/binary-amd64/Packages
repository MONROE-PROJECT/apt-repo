Package: circle
Version: 1.1.2-deb8u3
Architecture: all
Maintainer: Tobias DÃ©ly <tdely@celerway.com>
Homepage: https://github.com/nsahq/circle
Depends: bash (>= 4.0), iptables
Recommends: ip6tables, ebtables
Priority: optional
Section: admin
Filename: pool/main/c/circle/circle_1.1.2-deb8u3_all.deb
Size: 12248
SHA256: 82cc6eacdc1faed710be2bc29dbca543dcb9685d973d8d586c69bdddc305ffec
SHA1: 5496e4722927d2f85bd303f4505deb048dc90593
MD5sum: 020dadb165b3c42f489b3a73d21d8480
Description: circle firewall
 circle is a manager for iptables/ip6tables and ebtables with a modular rule system.

Package: monroe-experiment-core
Version: 0.9.5-deb8
Architecture: amd64
Maintainer: Jonas Karlsson <jonas.karlsson@kau.se>
Depends: util-linux (>=2.29), docker-ce (>=5:18), circle (>=1.1.2), table-allocator-client (>=0.1.2), table-allocator-server (>=0.1.2), dnsmasq (>=2), rsync (>=3.1.2), ssh-client, jq (>=1.5), ifupdown (>=0.8.19) | networkd-dispatcher (>=1.7), dnsutils (>=1:9), ipcalc (>=0.41-5), net-tools (>=1.60)
Vcs-Browser: https://github.com/MONROE-PROJECT/monroe-experiment-core
Vcs-Git: https://github.com/MONROE-PROJECT/monroe-experiment-core.git
Priority: optional
Section: devel
Filename: pool/main/m/monroe-experiment-core/monroe-experiment-core_0.9.5-deb8_amd64.deb
Size: 16972
SHA256: 417c642b64d604863e4def55b94bcca83360448e0b26ed44f20a49f0e21b88f3
SHA1: 1405880f859a905d397b97049ac1bda8c330235d
MD5sum: 52c1911fa971296726575e3d5d3aeb09
Description: Enables MONROE experiments to be run on a node

Package: monroe-experiment-core-rela
Version: 1.0.2
Architecture: amd64
Maintainer: Jonas Karlsson <jonas.karlsson@kau.se>
Depends: util-linux (>=2.29), docker-ce (>=5:18), circle (>=1.1.2), table-allocator-client (>=0.1.2), table-allocator-server (>=0.1.2), dnsmasq (>=2), rsync (>=3.1.2), ssh-client, jq (>=1.5), ifupdown (>=0.8.19), dnsutils (>=1:9)
Vcs-Browser: https://github.com/MONROE-PROJECT/monroe-experiment-core
Vcs-Git: https://github.com/MONROE-PROJECT/monroe-experiment-core.git
Priority: optional
Section: devel
Filename: pool/main/m/monroe-experiment-core-rela/monroe-experiment-core-rela_1.0.2_amd64.deb
Size: 16668
SHA256: 56c7f86452b60e0959c64382502794bf5ba2b0f74db7e3479b087d3e6c0af2c9
SHA1: 97c941e7deb25d24d85765c3fcc57faa980786c0
MD5sum: 5dce33198cdcf0b388b23cce44a508e0
Description: Enables MONROE experiments to be run on a node

Package: monroe-extension-neat
Version: 0.0.2
Architecture: amd64
Maintainer: Jonas Karlsson <jonas.karlsson@kau.se>
Depends: monroe-experiment-core (>=0.2.0)
Vcs-Browser: https://github.com/MONROE-PROJECT/monroe-experiment-core
Vcs-Git: https://github.com/MONROE-PROJECT/monroe-experiment-core.git
Priority: optional
Section: devel
Filename: pool/main/m/monroe-extension-neat/monroe-extension-neat_0.0.2_amd64.deb
Size: 1744
SHA256: acfca5a3f3a7d936ee9bfa4b11ec05fab8d5d4a715340aa820f01f3c295e5588
SHA1: abfb9536ef9d447e6502ec5af326fa3bc142ba0f
MD5sum: c32a3597856190c46cb7db44426ff555
Description: Enables MONROE experiments to tunnel TCP traffic through NEAT

Package: monroe-tap-agent
Version: 0.1.4
Architecture: amd64
Depends: python3-flask (>=0.12.1-1), monroe-experiment-core (>=0.2.0), python3-flask-api (>=0.6.4), openssl (>=1.1)
Installed-Size: 73
Maintainer: Jonas Karlsson <jonas.karlsson@kau.se>
Priority: optional
Section: devel
Filename: pool/main/m/monroe-tap-agent/monroe-tap-agent_0.1.4_amd64.deb
Size: 4894
SHA256: cdf387a9ac977410ffe7f31b55b8a151267a6ac62ac239549762dff69d01caae
SHA1: 8a8ab5d42a0625a3597aacf122becb01414d3182
MD5sum: e4b30ff650db519ffadd388dd255489f
Description: Installs a TAP agent to control and exectue experiments on a monroe node.

Package: monroe-tap-agent-rela
Version: 1.0.1
Architecture: amd64
Depends: python3-flask (>=0.12.1-1), monroe-experiment-core-rela (>=1.0.0), python3-flask-api (>=0.6.4), openssl (>=1.1)
Installed-Size: 73
Maintainer: Jonas Karlsson <jonas.karlsson@kau.se>
Priority: optional
Section: devel
Filename: pool/main/m/monroe-tap-agent-rela/monroe-tap-agent-rela_1.0.1_amd64.deb
Size: 5718
SHA256: a2f86bb0f45d619567496d3e14662fc2756f32c82fc6fa9003b89cc9bf4ee37b
SHA1: a6ef2c4340bb8b9b8794ba92a3bf019b42d51097
MD5sum: 1921625102dd51ad77c0cff18745c64c
Description: Installs a TAP agent to control and execute experiments on a monroe node.

Package: table-allocator-client
Version: 0.1.2-deb8u-20170831x1107-65b66b
Architecture: amd64
Depends: libuv1, libjson-c3, libmnl0
Installed-Size: 130
Maintainer: Kristian Evensen <kristian.evensen@gmail.com>
Priority: extra
Section: devel
Filename: pool/main/t/table-allocator-client/table-allocator-client_0.1.2-deb8u-20170831x1107-65b66b_amd64.deb
Size: 37436
SHA256: 64f5940888b8051d7c1429288b45d8887c9e34ff71ff9ad818cbd35b27e3f5c1
SHA1: b968896e1c5bb3ff7a7d340e6d73cdb0ba822ade
MD5sum: 80311cabca3d16e1d58a043b251e4944
Description: Table Allocator Client is a tool aimed to simplify the configuration of multihomed hosts, and must be used together with the Table Allocator Server. When started, the client will request a table lease from the Table Allocator Server. After the table lease has been acquired, the table will be written to stdout and the tool (by default) will move to the background. The reason for writing the table is so that routes easily can be added or moved to the correct table in for example an ifup script or dhclient-hook. The client tool takes care of adding and removing the required ip rules (rules removed when either address or interface is removed).

Package: table-allocator-server
Version: 0.1.2-deb8u-20170831x1107-65b66b
Architecture: amd64
Depends: libuv1, libjson-c3, libsqlite3-0
Installed-Size: 161
Maintainer: Kristian Evensen <kristian.evensen@gmail.com>
Priority: extra
Section: devel
Filename: pool/main/t/table-allocator-server/table-allocator-server_0.1.2-deb8u-20170831x1107-65b66b_amd64.deb
Size: 39790
SHA256: d9505681e9ab6bcbf5f5c7cd36e55023037ed3a5dfbd24b423ccb76b2961df24
SHA1: a9b6c1d00f574f54df03cbb53f6deab469c20916
MD5sum: a795a9c54725e4e92cc3d63350103de1
Description: This package contains the Table Allocator Server, for use together with the table allocator client. The purpose of this tool is to distribute and keep track of routing tables on multihomed hosts. Clients will request tables using a basic, well-defined protocols and are then required to refresh them at some configurable interval. The server will free any dead table leases.

